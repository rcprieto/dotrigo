// <auto-generated />
using System;
using API.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DoTrigoDbContext))]
    [Migration("20251028144448_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("API.Domain.Entidades.Enumerador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("enum_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("enum_nome");

                    b.Property<int?>("Ordem")
                        .HasColumnType("int")
                        .HasColumnName("enum_ordem");

                    b.Property<int?>("ReferenciaId")
                        .HasColumnType("int")
                        .HasColumnName("ref_id");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("enum_status");

                    b.HasKey("Id");

                    b.HasIndex("ReferenciaId");

                    b.ToTable("tb_enum", "ws_dotrigo");
                });

            modelBuilder.Entity("API.Domain.Entidades.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClienteNome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ClienteTelefone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Comentarios")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("enum_id");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("tb_pedido", "ws_dotrigo");
                });

            modelBuilder.Entity("API.Domain.Entidades.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ref_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasComment("Nome do produto no momento da compra");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoUnitario")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasComment("Preço do produto no momento da compra");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PedidoId" }, "idx_pedidoId");

                    b.HasIndex(new[] { "ProdutoId" }, "idx_produtoId");

                    b.ToTable("tb_pedido_item", "ws_dotrigo", t =>
                        {
                            t.HasComment("Itens individuais de cada pedido.");
                        });
                });

            modelBuilder.Entity("API.Domain.Entidades.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("prod_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasComment("1 = Visível no menu, 0 = Oculto");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("enum_cat_id");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("FotoUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Peso")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("Ex: \"300g\", \"500g\"");

                    b.Property<decimal>("Preco")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("ProntaEntrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasComment("1 = Sim, 0 = Não");

                    b.Property<string>("Tamanho")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("Ex: \"Pequena\", \"Média\", \"Grande\", \"Unidade\"");

                    b.Property<string>("TempoPreparo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("Ex: \"20 min\", \"Pronto\"");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("tb_produto", "ws_dotrigo");
                });

            modelBuilder.Entity("API.Domain.Entidades.Referencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ref_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ref_nome");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ref_status");

                    b.HasKey("Id");

                    b.ToTable("tb_referencia", "ws_dotrigo");
                });

            modelBuilder.Entity("API.Domain.Entidades.Enumerador", b =>
                {
                    b.HasOne("API.Domain.Entidades.Referencia", "Referencia")
                        .WithMany()
                        .HasForeignKey("ReferenciaId");

                    b.Navigation("Referencia");
                });

            modelBuilder.Entity("API.Domain.Entidades.Pedido", b =>
                {
                    b.HasOne("API.Domain.Entidades.Enumerador", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("API.Domain.Entidades.PedidoItem", b =>
                {
                    b.HasOne("API.Domain.Entidades.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Domain.Entidades.Produto", "Produto")
                        .WithMany("PedidoItens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("API.Domain.Entidades.Produto", b =>
                {
                    b.HasOne("API.Domain.Entidades.Enumerador", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("API.Domain.Entidades.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("API.Domain.Entidades.Produto", b =>
                {
                    b.Navigation("PedidoItens");
                });
#pragma warning restore 612, 618
        }
    }
}
